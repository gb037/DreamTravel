    <?php                		// function to insert Traveller data in the database         function insertTravellerInDB($db) {            			$noOfTravs = $_POST['noOfTravs'];            					switch ($noOfTravs) {				case "2":					// get the data from the front end					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					// check the values					if( !$a1name || !$a2name ) {						echo 'One or more fields are empty.';						return;					}										// create a query					$sqlQuery = "INSERT INTO Users 					(name, email, username, encrypt_pass) 					VALUES 					(:name, :email, :username, :password),					(:name2, :email2, :username2, :password2)";										//prepare the query					$query = $db->prepare($sqlQuery);										//execute the query					$query->execute(array(										  ':name' => $a1name,										  ':email' => NULL,											':username' => NULL,										  ':password' => NULL,										  ':name2' => $a2name,										  ':email2' => NULL,											':username2' => NULL,										  ':password2' => NULL										  ));					break;				case "3":										// get the data from the front end					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					$a3name = $_POST['a3name'];					// check the values					if( !$a1name || !$a2name || !$a3name) {						echo 'One or more fields are empty.';						return;					}										// create a query					$sqlQuery = "INSERT INTO Users 					(name, email, username, encrypt_pass) 					VALUES 					(:name, :email, :username, :password),					(:name2, :email2, :username2, :password2),					(:name3, :email3, :username3, :password3)";										//prepare the query					$query = $db->prepare($sqlQuery);										//execute the query					$query->execute(array(										  ':name' => $a1name,										  ':email' => NULL,											':username' => NULL,										  ':password' => NULL,										  ':name2' => $a2name,										  ':email2' => NULL,											':username2' => NULL,										  ':password2' => NULL,										  ':name3' => $a3name,										  ':email3' => NULL,											':username3' => NULL,										  ':password3' => NULL										  ));					break;				case "4":					// get the data from the front end					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					$a3name = $_POST['a3name'];					$a4name = $_POST['a4name'];					// check the values					if( !$a1name || !$a2name || !$a3name || !$a4name) {						echo 'One or more fields are empty.';						return;					}										// create a query					$sqlQuery = "INSERT INTO Users 					(name, email, username, encrypt_pass) 					VALUES 					(:name, :email, :username, :password),					(:name2, :email2, :username2, :password2),					(:name3, :email3, :username3, :password3),					(:name4, :email4, :username4, :password4)";										//prepare the query					$query = $db->prepare($sqlQuery);										//execute the query					$query->execute(array(										  ':name' => $a1name,										  ':email' => NULL,											':username' => NULL,										  ':password' => NULL,										  ':name2' => $a2name,										  ':email2' => NULL,											':username2' => NULL,										  ':password2' => NULL,										  ':name3' => $a3name,										  ':email3' => NULL,											':username3' => NULL,										  ':password3' => NULL,										  ':name4' => $a4name,										  ':email4' => NULL,											':username4' => NULL,										  ':password4' => NULL										  ));					break;				default:					// get the data from the front end					$a1name = $_POST['a1name'];					// check the values					if( !$a1name) {						echo 'One or more fields are empty.';						return;					}										// create a query					$sqlQuery = "INSERT INTO Users (name, email, username, encrypt_pass) VALUES (:name, :email, :username, :password)";										//prepare the query					$query = $db->prepare($sqlQuery);										//execute the query					$query->execute(array(										  ':name' => $a1name,										  ':email' => NULL,											':username' => NULL,										  ':password' => NULL										  ));			}        }        		        // function to insert data in the database         function insertBookingInDB($db) {                        // get the data from the front end            $bookingPrice = $_POST['bookingPrice'];            $tripID = $_POST['tripID'];            $userID = $_POST['userID'];				$noOfTravs = $_POST['noOfTravs'];			            // check the values            if( 			!$bookingPrice ||			!$tripID ||			!$userID ||			!$noOfTravs			) 				{					echo 'One or more fields are empty.';					return;				}            else {                // escape special characters in a string for use in the SQL statement            }								$sqlQuery = "INSERT INTO Bookings (bookingPrice, tripID, noOfTravs) VALUES (?, ?, ?)";			    //prepare the query            $query = $db->prepare($sqlQuery);                        //execute the query            $query->execute(array($bookingPrice, $tripID, $noOfTravs));             /* check if the booking was successfully inserted in the database            if ($query) {				//once the SQL write operation is complete, redirect to a receipt page                header("Location: receipt.php");				die();            }            else {                //redirect to an error page                header("Location: error.php");				die();            }            */        }		        //function to associate user ID to groupID 3 = Travellers        function insertGroupUserInDB($db) {                        // get the data from the front end            $groupID = 3;			$noOfTravs = $_POST['noOfTravs'];									switch ($noOfTravs) {				case "2":					// Look up the most recent ID in users					$query2 = "SELECT MAX(ID) AS 'ID'					FROM users";										//send the query to the db					$result = $db->query($query2);					$found = true;					while ($row = $result->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a2userID = $row['ID'];						  $found = true;						  break;					}										$a1userID = $a2userID - 1;					//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery2 = "INSERT INTO `groups_users` 					(`ID`, `group_id`, `user_id`) 					VALUES 					(:id, :group_id, :a1_user_id),					(:id2, :group_id2, :a2_user_id)					";									//prepare the query					$query3 = $db->prepare($sqlQuery2);										//execute the query					$query3->execute(array(										':id' => NULL, 										':group_id' => $groupID, 										':a1_user_id' => $a1userID,										':id2' => NULL, 										':group_id2' => $groupID, 										':a2_user_id' => $a2userID										));					break;				case "3":					// Look up the most recent ID in users					$query2 = "SELECT MAX(ID) AS 'ID'					FROM users";										//send the query to the db					$result = $db->query($query2);					$found = true;					while ($row = $result->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a3userID = $row['ID'];						  $found = true;						  break;					}										$a2userID = $a3userID - 1;					$a1userID = $a2userID - 1;					//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery2 = "INSERT INTO `groups_users` 					(`ID`, `group_id`, `user_id`) 					VALUES 					(:id, :group_id, :a1_user_id),					(:id2, :group_id2, :a2_user_id),					(:id3, :group_id3, :a3_user_id)					";									//prepare the query					$query3 = $db->prepare($sqlQuery2);										//execute the query					$query3->execute(array(										':id' => NULL, 										':group_id' => $groupID, 										':a1_user_id' => $a1userID,										':id2' => NULL, 										':group_id2' => $groupID, 										':a2_user_id' => $a2userID,										':id3' => NULL, 										':group_id3' => $groupID, 										':a3_user_id' => $a3userID										));					break;				case "4":										// Look up the most recent ID in users					$query2 = "SELECT MAX(ID) AS 'ID'					FROM users";										//send the query to the db					$result = $db->query($query2);					$found = true;					while ($row = $result->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a4userID = $row['ID'];						  $found = true;						  break;					}										$a3userID = $a4userID - 1;					$a2userID = $a3userID - 1;					$a1userID = $a2userID - 1;					//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery2 = "INSERT INTO `groups_users` 					(`ID`, `group_id`, `user_id`) 					VALUES 					(:id, :group_id, :a1_user_id),					(:id2, :group_id2, :a2_user_id),					(:id3, :group_id3, :a3_user_id),					(:id4, :group_id4, :a4_user_id)					";									//prepare the query					$query3 = $db->prepare($sqlQuery2);										//execute the query					$query3->execute(array(										':id' => NULL, 										':group_id' => $groupID, 										':a1_user_id' => $a1userID,										':id2' => NULL, 										':group_id2' => $groupID, 										':a2_user_id' => $a2userID,										':id3' => NULL, 										':group_id3' => $groupID, 										':a3_user_id' => $a3userID,										':id4' => NULL, 										':group_id4' => $groupID, 										':a4_user_id' => $a4userID										));					break;				default:					// Look up the most recent ID in users					$query2 = "SELECT MAX(ID) AS 'ID'					FROM users";										//send the query to the db					$result = $db->query($query2);					$found = true;					while ($row = $result->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a1userID = $row['ID'];						  $found = true;						  break;					}										//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery2 = "INSERT INTO `groups_users` 					(`ID`, `group_id`, `user_id`) 					VALUES 					(:id, :group_id, :a1_user_id)					";									//prepare the query					$query3 = $db->prepare($sqlQuery2);										//execute the query					$query3->execute(array(										':id' => NULL, 										':group_id' => $groupID, 										':a1_user_id' => $a1userID										));			}			if($noOfTravs == 1) 				{									}			else 				{									}        }					//function to associate booking ID to Customer user ID        function insertBookingCustomerInDB($db) {                        // get the data from the front end            $userID = $_POST['userID'];				$tripID = $_POST['tripID'];							// Look up the bookings.ID for that particular tripID			$query = "SELECT MAX(ID) AS 'ID'			FROM bookings 			WHERE tripID = :tripID";			$params = array(							'tripID' => $tripID							);						$result = $db->prepare($query);			$result->execute($params);			echo 'Trip ID is ', $tripID, '   ' ;		    $found = true;            while ($row = $result->fetch(PDO::FETCH_ASSOC)) 			{             				  $found = false;				  //get the ID found in the database				  $bookingID = $row['ID'];				  $found = true;				  break;            }			echo 'Booking ID is ', $bookingID, '   ' ;						//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');			$sqlQuery = "INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (?, ?, ?)";					//prepare the query            $query = $db->prepare($sqlQuery);                        //execute the query			$query->execute(array(NULL, $bookingID, $userID));         }						//function to associate booking ID to Traveller user ID        function insertBookingTravellerInDB($db) {                        // get the data from the front end			$tripID = $_POST['tripID'];										// Look up the bookings.ID for that particular tripID			$query = "SELECT MAX(ID) AS 'ID'			FROM bookings 			WHERE tripID = :tripID";			$params = array(							'tripID' => $tripID							);						$result = $db->prepare($query);			$result->execute($params);			echo 'Trip ID is ', $tripID, '   ' ;		    $found = true;            while ($row = $result->fetch(PDO::FETCH_ASSOC)) 			{             				  $found = false;				  //get the ID found in the database				  $bookingID = $row['ID'];				  $found = true;				  break;            }			echo 'Booking ID is ', $bookingID, '   ' ;						$noOfTravs = $_POST['noOfTravs'];					switch ($noOfTravs) {				case "2":					// Look up the users.ID for that particular users.name					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];										$query1 = "SELECT ID					FROM users 					WHERE name = :name";					$params1 = array(									'name' => $a1name									);										$result1 = $db->prepare($query1);					$result1->execute($params1);					$found = true;					while ($row = $result1->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a1userID = $row['ID'];						  $found = true;						  break;					}					echo 'a1userID is ', $a1userID, '   ' ;										$query2 = "SELECT ID					FROM users 					WHERE name = :name";					$params2 = array(									'name' => $a2name									);										$result2 = $db->prepare($query2);					$result2->execute($params2);					$found = true;					while ($row = $result2->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a2userID = $row['ID'];						  $found = true;						  break;					}					echo 'a2userID is ', $a2userID, '   ' ;															//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery = "INSERT INTO `bookings_users` 					(`ID`, `booking_id`, `user_id`) 					VALUES 					(:ID, :booking_id, :user_id),					(:ID2, :booking_id2, :user_id2)					";									//prepare the query					$query0 = $db->prepare($sqlQuery);										//execute the query					$query0->execute(array(										':ID' => NULL, 										':booking_id' => $bookingID, 										':user_id' => $a1userID,										':ID2' => NULL, 										':booking_id2' => $bookingID, 										':user_id2' => $a2userID									));					break;				case "3":					// Look up the users.ID for that particular users.name					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					$a3name = $_POST['a3name'];										$query1 = "SELECT ID					FROM users 					WHERE name = :name";					$params1 = array(									'name' => $a1name									);										$result1 = $db->prepare($query1);					$result1->execute($params1);					$found = true;					while ($row = $result1->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a1userID = $row['ID'];						  $found = true;						  break;					}					echo 'a1userID is ', $a1userID, '   ' ;																														$query2 = "SELECT ID					FROM users 					WHERE name = :name";					$params2 = array(									'name' => $a2name									);										$result2 = $db->prepare($query2);					$result2->execute($params2);					$found = true;					while ($row = $result2->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a2userID = $row['ID'];						  $found = true;						  break;					}					echo 'a2userID is ', $a2userID, '   ' ;																														$query3 = "SELECT ID					FROM users 					WHERE name = :name";					$params3 = array(									'name' => $a3name									);										$result3 = $db->prepare($query3);					$result3->execute($params3);					$found = true;					while ($row = $result3->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a3userID = $row['ID'];						  $found = true;						  break;					}					echo 'a3userID is ', $a3userID, '   ' ;																														//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery = "INSERT INTO `bookings_users` 					(`ID`, `booking_id`, `user_id`) 					VALUES 					(:ID, :booking_id, :user_id),					(:ID2, :booking_id2, :user_id2),					(:ID3, :booking_id3, :user_id3)					";									//prepare the query					$query0 = $db->prepare($sqlQuery);										//execute the query					$query0->execute(array(										':ID' => NULL, 										':booking_id' => $bookingID, 										':user_id' => $a1userID,										':ID2' => NULL, 										':booking_id2' => $bookingID, 										':user_id2' => $a2userID,										':ID3' => NULL, 										':booking_id3' => $bookingID, 										':user_id3' => $a3userID									));					break;				case "4":										// Look up the users.ID for that particular users.name					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					$a3name = $_POST['a3name'];					$a4name = $_POST['a4name'];															$query1 = "SELECT ID					FROM users 					WHERE name = :name";					$params1 = array(									'name' => $a1name									);										$result1 = $db->prepare($query1);					$result1->execute($params1);					$found = true;					while ($row = $result1->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a1userID = $row['ID'];						  $found = true;						  break;					}					echo 'a1userID is ', $a1userID, '   ' ;																														$query2 = "SELECT ID					FROM users 					WHERE name = :name";					$params2 = array(									'name' => $a2name									);										$result2 = $db->prepare($query2);					$result2->execute($params2);					$found = true;					while ($row = $result2->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a2userID = $row['ID'];						  $found = true;						  break;					}					echo 'a2userID is ', $a2userID, '   ' ;																														$query3 = "SELECT ID					FROM users 					WHERE name = :name";					$params3 = array(									'name' => $a3name									);										$result3 = $db->prepare($query3);					$result3->execute($params3);					$found = true;					while ($row = $result3->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a3userID = $row['ID'];						  $found = true;						  break;					}					echo 'a3userID is ', $a3userID, '   ' ;																														$query4 = "SELECT ID					FROM users 					WHERE name = :name";					$params4 = array(									'name' => $a4name									);										$result4 = $db->prepare($query4);					$result4->execute($params4);					$found = true;					while ($row = $result4->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a4userID = $row['ID'];						  $found = true;						  break;					}					echo 'a4userID is ', $a4userID, '   ' ;																														//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery = "INSERT INTO `bookings_users` 					(`ID`, `booking_id`, `user_id`) 					VALUES 					(:ID, :booking_id, :user_id),					(:ID2, :booking_id2, :user_id2),					(:ID3, :booking_id3, :user_id3),					(:ID4, :booking_id4, :user_id4)					";									//prepare the query					$query0 = $db->prepare($sqlQuery);										//execute the query					$query0->execute(array(										':ID' => NULL, 										':booking_id' => $bookingID, 										':user_id' => $a1userID,										':ID2' => NULL, 										':booking_id2' => $bookingID, 										':user_id2' => $a2userID,										':ID3' => NULL, 										':booking_id3' => $bookingID, 										':user_id3' => $a3userID,										':ID4' => NULL, 										':booking_id4' => $bookingID, 										':user_id4' => $a4userID									));					break;				default:					// Look up the users.ID for that particular users.name					$a1name = $_POST['a1name'];										$query1 = "SELECT ID					FROM users 					WHERE name = :name";					$params1 = array(									'name' => $a1name									);										$result1 = $db->prepare($query1);					$result1->execute($params1);					$found = true;					while ($row = $result1->fetch(PDO::FETCH_ASSOC)) 					{             						  $found = false;						  //get the ID found in the database						  $a1userID = $row['ID'];						  $found = true;						  break;					}					echo 'a1userID is ', $a1userID, '   ' ;															//INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (NULL, '6', '3');					$sqlQuery = "INSERT INTO `bookings_users` (`ID`, `booking_id`, `user_id`) VALUES (?, ?, ?)";									//prepare the query					$query2 = $db->prepare($sqlQuery);										//execute the query					$query2->execute(array(NULL, $bookingID, $a1userID));			}        }							// function to update trip in the database         function updateTripInDB($db) {                        // get the data from the front end;            $tripID = $_POST['tripID'];				            // check the values            if( 			!$tripID			) 				{					echo 'One or more fields are empty.';					return;				}            else {                // escape special characters in a string for use in the SQL statement 			}												$noOfTravs = $_POST['noOfTravs'];							$sqlQuery = "UPDATE Trips 						SET placesLeft = placesLeft - :noOfTravs						WHERE tripID = $tripID";						$params = array(									'noOfTravs' => $noOfTravs									);											$result = $db->prepare($sqlQuery);						$result->execute($params);		 			//check if the booking was successfully inserted in the database            if ($result) {				//once the SQL write operation is complete, redirect to a receipt page                header("Location: bookingConfirmed.php");				die();            }            else {                //redirect to an error page                header("Location: error.php");				die();            }        }				                /* Main body */        //connect to the DB        $dsn = 'mysql:host=127.0.0.1;dbname=dream-travel-v05';        $user = 'root';        $password = '';                try {            $db = new PDO($dsn, $user, $password);            $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);        } catch (PDOException $e) {            //           echo 'Connection failed: ' . $e->getMessage();            die('Sorry, database problem');        }        		$noOfTravs = $_POST['noOfTravs'];				switch ($noOfTravs) {				case "2":					// get the data from the front end					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					// check the values					if( !$a1name || !$a2name ) {						echo 'One or more fields are empty.';						return;					}					break;				case "3":										// get the data from the front end					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					$a3name = $_POST['a3name'];					// check the values					if( !$a1name || !$a2name || !$a3name) {						echo 'One or more fields are empty.';						return;					}					break;				case "4":					// get the data from the front end					$a1name = $_POST['a1name'];					$a2name = $_POST['a2name'];					$a3name = $_POST['a3name'];					$a4name = $_POST['a4name'];					// check the values					if( !$a1name || !$a2name || !$a3name || !$a4name) {						echo 'One or more fields are empty.';						return;					}					break;				default:					// get the data from the front end					$a1name = $_POST['a1name'];					// check the values					if( !$a1name) {						echo 'One or more fields are empty.';						return;					}			}		        insertTravellerInDB($db);		insertBookingInDB($db);		insertGroupUserInDB($db);		insertBookingCustomerInDB($db);		insertBookingTravellerInDB($db);		updateTripInDB($db);        ?>